#+title: Spookfox Software Architecture

Spookfox involves following major parts in terms of a tech stack.

1. *spookfox.el*: Emacs package written in Emacs Lisp
2. *spookfox-addon*: Firefox extension written in Javascript

To make the browser extension talk to Emacs, Spookfox uses Websockets. A
websockets server is started in Emacs, to which browser addon then connects.
Emacs itself proved unusable as a native-messaging client.

* Level 0

Low level communication between browser and Emacs over websockets.

** Components

Spookfox has 3 primary components:

1. <<sa>> : spookfox-addon : Firefox addon written in Javascript
2. <<se>> : spookfox-el : Emacs package written in Emacs Lisp

* Level 1

Communication between browser and Emacs in terms of requests and responses.
These aren't HTTP requests/responses, but a kinda-sorta protocol hand rolled
atop of Level 0.

** Components

1. [[sa]]
2. [[se]]

* Glossary

- <<Request>> :: Analogous of a request in most protocols. This is a message one
  side sends to another, expecting it to do some operation and/or a response.
  Every request must have a unique ID.
- <<Response>> :: Response to a request. Every response contains a =requestId=
  identifying which requests is being responded to.
