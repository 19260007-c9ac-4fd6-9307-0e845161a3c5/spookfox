#+begin_quote
You might also wanna read [[./architecture.org]]
#+end_quote

If you are looking to contribute to spookfox's development, please follow this
guide to setup a development environment.

/Assumption/: you are on a Linux machine, and have cloned this repo.

** Setup

*** Without Nix

If you don't have [[https://nixos.org/][Nix]] installed, you will need to make sure that following
software are available in your =$PATH=.

1. Node.js, for building the spookfox add-on

*** With Nix

If you have Nix installed, you can just do =nix-shell= to drop into an already
setup development environment. Or if you are using [[https://direnv.net/][direnv]], just do a =direnv
allow= to achieve the same.


** Install the addon

1. =cd spookfox-addon=
2. =yarn=
3. =yarn start=
4. Install in Firefox
   1. Open Firefox
   2. Go to [[about:addons][about:addons]]
   3. Click on the gear icon and select "*Debug Add-Ons*"
   4. Click on "*Load Temporary Add-on*" button
   5. Navigate to the =spookfox-addon/dist= directory, and click =Open=

Any changes you make to typescript/html/scss now will automatically rebuild. But
you will still need to click on =Reload= button on *Debug Add-Ons* firefox page.

** Install spookfox.el

*** Using straight.el

You can use straight.el to install it directly from where you've clone this
repo.

#+begin_src elisp
  (use-package spookfox
        :straight (spookfox :type git
                            :local-repo "~/Documents/work/spookfox"
                            :files ("lisp/*.el" "lisp/apps/*.el"))
        :config
        (spookfox-init))
#+end_src

This is how I install it in [[https://github.com/bitspook/spookmax.d/][my config]].

** Tips

*** Debugging the Firefox addon

- Access addon's developer console

  In Firefox go to [[about:addons]], click /Gear Icon > Debug Addons > Inspect(in
  Spookfox box)/. This will open a developer console where you can see messages
  logged by the addon. There is also a global variable =sf= (instance of
  =Spookfox= class) available which you can play with.

- Log state-changing events

  Mutable state proves to be the issue behind a lot of bugs. If you find
  yourself in position where you want to troubleshoot a bug, set
  =SPOOKFOX_DEBUG= to a truth-y value in =localStorage= i.e

  #+begin_src js
    localStorage.setItem('SPOOKFOX_DEBUG', 1)
  #+end_src
