{"mappings":"MAAA,IAAIA,EAAOC,QAAQC,QAAQC,cAAc,YAEzCH,EAAKI,aAAaC,aAAaC,IAC7BC,QAAQC,IAAI,gCACRF,EAAEG,OACJF,QAAQE,MAAM,4BAA6BH,EAAEG,UAIjDT,EAAKU,UAAUL,aAAWM,MAAQC,IAChC,GAAKA,EAAIC,QAKT,IACE,MAAMC,EAASC,KAAKC,MAAMJ,EAAIC,SAE9B,OAAQC,EAAOG,MACb,IAAK,iBACH,MAAMC,QAAcC,IACpB,OAAOnB,EAAKoB,YAAYF,GAC1B,IAAK,eACH,MAAMG,QAAcC,IACpB,OAAOtB,EAAKoB,YAAYC,WAExBd,QAAQgB,KAAI,0BAA2BR,KAAKS,UAAUV,QAG1D,MAAOW,GACPlB,QAAQkB,IAAG,4BAA6BA,UAAYb,EAAIC,iBAnBxDN,QAAQgB,KAAK,mBAAoBX,MAuBrC,MAAMO,EAAYR,UAChB,MAAMe,QAAazB,QAAQyB,KAAKC,MAAM,CAAEC,eAAe,EAAMC,QAAQ,IACrE,IAAKH,EAAKI,OACR,MAAO,CAAEb,KAAM,QAASc,QAAS,wBAGnC,MAAMC,EAAYN,EAAK,GAEvB,MAAO,CACLO,IAAKD,EAAUC,IACfC,MAAOF,EAAUE,QAIfZ,EAAUX,gBACKV,QAAQyB,KAAKC,MAAM,CAAEC,eAAe,KAE3CO,KAAKC,IAAG,CAClBH,IAAKG,EAAIH,IACTC,MAAOE,EAAIF,UAIfjC,QAAQoC,cAAcC,UAAUjC,aAAWM,UACzCJ,QAAQgB,KAAK,aAAcJ","sources":["src/background.js"],"sourcesContent":["var port = browser.runtime.connectNative(\"spookfox\");\n\nport.onDisconnect.addListener((p) => {\n  console.log('Disconnected from Native APP');\n  if (p.error) {\n    console.error('Disconnected due to error', p.error);\n  }\n})\n\nport.onMessage.addListener(async (msg) => {\n  if (!msg.payload) {\n    console.warn('Unknown message:', msg);\n    return;\n  }\n\n  try {\n    const action = JSON.parse(msg.payload);\n\n    switch (action.type) {\n      case 'GET_ACTIVE_TAB':\n        const msg_1 = await getActiveTab();\n        return port.postMessage(msg_1);\n      case 'GET_ALL_TABS':\n        const msg_2 = await getAllTabs();\n        return port.postMessage(msg_2);\n      default:\n        console.warn(`Unknown action [action=${JSON.stringify(action)}]`)\n    }\n\n  } catch (err) {\n    console.err(`Bad message payload [err=${err}, msg=${msg.payload}]`);\n  }\n});\n\nconst getActiveTab = async () => {\n  const tabs = await browser.tabs.query({ currentWindow: true, active: true });\n  if (!tabs.length) {\n    return { type: 'Error', message: 'No active tabs found' };\n  }\n\n  const activeTab = tabs[0];\n\n  return {\n    url: activeTab.url,\n    title: activeTab.title,\n  }\n};\n\nconst getAllTabs = async () => {\n  const tabs = await browser.tabs.query({ currentWindow: true });\n\n  return tabs.map((tab) => ({\n    url: tab.url,\n    title: tab.title\n  }));\n}\n\nbrowser.browserAction.onClicked.addListener(async () => {\n  console.warn('TABS', await getActiveTab());\n});\n"],"names":["$536f6b49bdac2b8c$var$port","browser","runtime","connectNative","onDisconnect","addListener","p","console","log","error","onMessage","async","msg","payload","action","JSON","parse","type","msg_1","$536f6b49bdac2b8c$var$getActiveTab","postMessage","msg_2","$536f6b49bdac2b8c$var$getAllTabs","warn","stringify","err","tabs","query","currentWindow","active","length","message","activeTab","url","title","map","tab","browserAction","onClicked"],"version":3,"file":"background.js.map"}